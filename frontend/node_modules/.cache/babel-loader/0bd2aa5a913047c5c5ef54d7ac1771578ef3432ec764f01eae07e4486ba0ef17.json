{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamma\\\\Desktop\\\\GO\\\\frontend\\\\src\\\\components\\\\NodeManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport Chip from '@mui/material/Chip';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n// Icons\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/api';\nexport const NodeManager = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [registerNodeOpen, setRegisterNodeOpen] = useState(false);\n  const [newNode, setNewNode] = useState({\n    address: '',\n    storageMax: 1024 * 1024 * 1024\n  }); // 1GB default\n  const [editNodeOpen, setEditNodeOpen] = useState(false);\n  const [editingNode, setEditingNode] = useState(null);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [nodeToDelete, setNodeToDelete] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n\n  // Fetch nodes\n  const fetchNodes = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_URL}/nodes`);\n      setNodes(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to fetch nodes: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to fetch nodes',\n        severity: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize by fetching nodes\n  useEffect(() => {\n    fetchNodes();\n\n    // Set up a refresh interval (every 30 seconds)\n    const intervalId = setInterval(fetchNodes, 30000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Register node dialog handlers\n  const handleRegisterNodeOpen = () => {\n    setRegisterNodeOpen(true);\n  };\n  const handleRegisterNodeClose = () => {\n    setRegisterNodeOpen(false);\n    setNewNode({\n      address: '',\n      storageMax: 1024 * 1024 * 1024\n    });\n  };\n  const handleRegisterNode = async () => {\n    if (!newNode.address || !newNode.storageMax) return;\n    try {\n      await axios.post(`${API_URL}/nodes`, {\n        address: newNode.address,\n        storageMax: parseInt(newNode.storageMax)\n      });\n      setNotification({\n        open: true,\n        message: 'Node registered successfully',\n        severity: 'success'\n      });\n      fetchNodes();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to register node: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to register node',\n        severity: 'error'\n      });\n    }\n    handleRegisterNodeClose();\n  };\n\n  // Edit node dialog handlers\n  const handleEditNodeOpen = node => {\n    setEditingNode({\n      ...node,\n      status: node.status || 'active'\n    });\n    setEditNodeOpen(true);\n  };\n  const handleEditNodeClose = () => {\n    setEditNodeOpen(false);\n    setEditingNode(null);\n  };\n  const handleEditNode = async () => {\n    if (!editingNode) return;\n    try {\n      await axios.put(`${API_URL}/nodes/${editingNode.id}/status`, {\n        status: editingNode.status\n      });\n      setNotification({\n        open: true,\n        message: 'Node updated successfully',\n        severity: 'success'\n      });\n      fetchNodes();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError('Failed to update node: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to update node',\n        severity: 'error'\n      });\n    }\n    handleEditNodeClose();\n  };\n\n  // Delete node handlers\n  const handleDeleteConfirmOpen = node => {\n    setNodeToDelete(node);\n    setDeleteConfirmOpen(true);\n  };\n  const handleDeleteConfirmClose = () => {\n    setDeleteConfirmOpen(false);\n    setNodeToDelete(null);\n  };\n  const handleDeleteNode = async () => {\n    if (!nodeToDelete) return;\n    try {\n      await axios.delete(`${API_URL}/nodes/${nodeToDelete.id}`);\n      setNotification({\n        open: true,\n        message: 'Node deleted successfully',\n        severity: 'success'\n      });\n      fetchNodes();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError('Failed to delete node: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to delete node',\n        severity: 'error'\n      });\n    }\n    handleDeleteConfirmClose();\n  };\n\n  // Notification close handler\n  const handleNotificationClose = () => {\n    setNotification({\n      ...notification,\n      open: false\n    });\n  };\n\n  // Helper to get status chip color\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return 'success';\n      case 'inactive':\n        return 'warning';\n      case 'failed':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  // Helper to format storage size\n  const formatStorage = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Helper to calculate storage percentage\n  const calculateStoragePercentage = (used, max) => {\n    return Math.round(used / max * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: \"Node Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 26\n            }, this),\n            onClick: handleRegisterNodeOpen,\n            sx: {\n              mr: 1\n            },\n            children: \"Register Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            onClick: fetchNodes,\n            disabled: loading,\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : nodes.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: \"No nodes registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"nodes table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Storage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Last Seen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: nodes.map(node => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [node.id.substring(0, 8), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: node.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: node.status || 'active',\n                  color: getStatusColor(node.status || 'active'),\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexDirection: 'column'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: '100%',\n                      mr: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n                      variant: \"determinate\",\n                      value: calculateStoragePercentage(node.storageUsed, node.storageMax),\n                      color: calculateStoragePercentage(node.storageUsed, node.storageMax) > 90 ? 'error' : calculateStoragePercentage(node.storageUsed, node.storageMax) > 70 ? 'warning' : 'primary'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      minWidth: 35,\n                      mt: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: [formatStorage(node.storageUsed), \" / \", formatStorage(node.storageMax)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(node.lastSeen).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Edit Node\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    onClick: () => handleEditNodeOpen(node),\n                    size: \"small\",\n                    sx: {\n                      mr: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Delete Node\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"error\",\n                    onClick: () => handleDeleteConfirmOpen(node),\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this)]\n            }, node.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: registerNodeOpen,\n      onClose: handleRegisterNodeClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Register New Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Enter the details for the new node:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"address\",\n          label: \"Node Address\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newNode.address,\n          onChange: e => setNewNode({\n            ...newNode,\n            address: e.target.value\n          }),\n          sx: {\n            mb: 2\n          },\n          placeholder: \"http://nodeaddress:port\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          id: \"storageMax\",\n          label: \"Max Storage (bytes)\",\n          type: \"number\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newNode.storageMax,\n          onChange: e => setNewNode({\n            ...newNode,\n            storageMax: e.target.value\n          }),\n          inputProps: {\n            min: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRegisterNodeClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRegisterNode,\n          color: \"primary\",\n          disabled: !newNode.address || !newNode.storageMax,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editNodeOpen,\n      onClose: handleEditNodeClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Update node status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          margin: \"dense\",\n          id: \"status\",\n          label: \"Status\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: (editingNode === null || editingNode === void 0 ? void 0 : editingNode.status) || 'active',\n          onChange: e => setEditingNode({\n            ...editingNode,\n            status: e.target.value\n          }),\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"inactive\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"failed\",\n            children: \"Failed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditNodeClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditNode,\n          color: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteConfirmOpen,\n      onClose: handleDeleteConfirmClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure you want to delete this node? This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteConfirmClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteNode,\n          color: \"error\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleNotificationClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleNotificationClose,\n        severity: notification.severity,\n        sx: {\n          width: '100%'\n        },\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(NodeManager, \"pI3gdBASr+V0UP5n0eaivuaAzrU=\");\n_c = NodeManager;\nvar _c;\n$RefreshReg$(_c, \"NodeManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Button","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","MenuItem","CircularProgress","Alert","Snackbar","Tooltip","Chip","LinearProgress","AddIcon","DeleteIcon","RefreshIcon","EditIcon","jsxDEV","_jsxDEV","API_URL","NodeManager","_s","nodes","setNodes","loading","setLoading","error","setError","registerNodeOpen","setRegisterNodeOpen","newNode","setNewNode","address","storageMax","editNodeOpen","setEditNodeOpen","editingNode","setEditingNode","deleteConfirmOpen","setDeleteConfirmOpen","nodeToDelete","setNodeToDelete","notification","setNotification","open","message","severity","fetchNodes","response","get","data","err","_err$response","_err$response$data","intervalId","setInterval","clearInterval","handleRegisterNodeOpen","handleRegisterNodeClose","handleRegisterNode","post","parseInt","_err$response2","_err$response2$data","handleEditNodeOpen","node","status","handleEditNodeClose","handleEditNode","put","id","_err$response3","_err$response3$data","handleDeleteConfirmOpen","handleDeleteConfirmClose","handleDeleteNode","delete","_err$response4","_err$response4$data","handleNotificationClose","getStatusColor","formatStorage","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","calculateStoragePercentage","used","max","round","children","sx","p","mb","display","justifyContent","alignItems","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","startIcon","onClick","mr","disabled","length","textAlign","minWidth","map","scope","substring","label","size","flexDirection","width","value","storageUsed","mt","Date","lastSeen","toLocaleString","title","fontSize","onClose","autoFocus","margin","type","fullWidth","onChange","e","target","placeholder","inputProps","min","select","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/hamma/Desktop/GO/frontend/src/components/NodeManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport Chip from '@mui/material/Chip';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n// Icons\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst API_URL = 'http://localhost:8080/api';\n\nexport const NodeManager = () => {\n  const [nodes, setNodes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [registerNodeOpen, setRegisterNodeOpen] = useState(false);\n  const [newNode, setNewNode] = useState({ address: '', storageMax: 1024 * 1024 * 1024 }); // 1GB default\n  const [editNodeOpen, setEditNodeOpen] = useState(false);\n  const [editingNode, setEditingNode] = useState(null);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [nodeToDelete, setNodeToDelete] = useState(null);\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\n\n  // Fetch nodes\n  const fetchNodes = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_URL}/nodes`);\n      setNodes(response.data);\n    } catch (err) {\n      setError('Failed to fetch nodes: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to fetch nodes', \n        severity: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize by fetching nodes\n  useEffect(() => {\n    fetchNodes();\n    \n    // Set up a refresh interval (every 30 seconds)\n    const intervalId = setInterval(fetchNodes, 30000);\n    \n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Register node dialog handlers\n  const handleRegisterNodeOpen = () => {\n    setRegisterNodeOpen(true);\n  };\n\n  const handleRegisterNodeClose = () => {\n    setRegisterNodeOpen(false);\n    setNewNode({ address: '', storageMax: 1024 * 1024 * 1024 });\n  };\n\n  const handleRegisterNode = async () => {\n    if (!newNode.address || !newNode.storageMax) return;\n    \n    try {\n      await axios.post(`${API_URL}/nodes`, {\n        address: newNode.address,\n        storageMax: parseInt(newNode.storageMax)\n      });\n      setNotification({ \n        open: true, \n        message: 'Node registered successfully', \n        severity: 'success' \n      });\n      fetchNodes();\n    } catch (err) {\n      setError('Failed to register node: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to register node', \n        severity: 'error' \n      });\n    }\n    \n    handleRegisterNodeClose();\n  };\n\n  // Edit node dialog handlers\n  const handleEditNodeOpen = (node) => {\n    setEditingNode({\n      ...node,\n      status: node.status || 'active'\n    });\n    setEditNodeOpen(true);\n  };\n\n  const handleEditNodeClose = () => {\n    setEditNodeOpen(false);\n    setEditingNode(null);\n  };\n\n  const handleEditNode = async () => {\n    if (!editingNode) return;\n    \n    try {\n      await axios.put(`${API_URL}/nodes/${editingNode.id}/status`, {\n        status: editingNode.status\n      });\n      setNotification({ \n        open: true, \n        message: 'Node updated successfully', \n        severity: 'success' \n      });\n      fetchNodes();\n    } catch (err) {\n      setError('Failed to update node: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to update node', \n        severity: 'error' \n      });\n    }\n    \n    handleEditNodeClose();\n  };\n\n  // Delete node handlers\n  const handleDeleteConfirmOpen = (node) => {\n    setNodeToDelete(node);\n    setDeleteConfirmOpen(true);\n  };\n\n  const handleDeleteConfirmClose = () => {\n    setDeleteConfirmOpen(false);\n    setNodeToDelete(null);\n  };\n\n  const handleDeleteNode = async () => {\n    if (!nodeToDelete) return;\n    \n    try {\n      await axios.delete(`${API_URL}/nodes/${nodeToDelete.id}`);\n      setNotification({ \n        open: true, \n        message: 'Node deleted successfully', \n        severity: 'success' \n      });\n      fetchNodes();\n    } catch (err) {\n      setError('Failed to delete node: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to delete node', \n        severity: 'error' \n      });\n    }\n    \n    handleDeleteConfirmClose();\n  };\n\n  // Notification close handler\n  const handleNotificationClose = () => {\n    setNotification({ ...notification, open: false });\n  };\n\n  // Helper to get status chip color\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active':\n        return 'success';\n      case 'inactive':\n        return 'warning';\n      case 'failed':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  // Helper to format storage size\n  const formatStorage = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    \n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Helper to calculate storage percentage\n  const calculateStoragePercentage = (used, max) => {\n    return Math.round((used / max) * 100);\n  };\n\n  return (\n    <Box>\n      <Paper sx={{ p: 2, mb: 2 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" component=\"div\">\n            Node Manager\n          </Typography>\n          <Box>\n            <Button \n              variant=\"contained\" \n              color=\"primary\" \n              startIcon={<AddIcon />}\n              onClick={handleRegisterNodeOpen}\n              sx={{ mr: 1 }}\n            >\n              Register Node\n            </Button>\n            <IconButton \n              color=\"primary\" \n              onClick={fetchNodes}\n              disabled={loading}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Box>\n        </Box>\n        \n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : nodes.length === 0 ? (\n          <Box sx={{ p: 4, textAlign: 'center' }}>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              No nodes registered\n            </Typography>\n          </Box>\n        ) : (\n          <TableContainer>\n            <Table sx={{ minWidth: 650 }} aria-label=\"nodes table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell>Address</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Storage</TableCell>\n                  <TableCell>Last Seen</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {nodes.map((node) => (\n                  <TableRow key={node.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {node.id.substring(0, 8)}...\n                    </TableCell>\n                    <TableCell>{node.address}</TableCell>\n                    <TableCell>\n                      <Chip \n                        label={node.status || 'active'} \n                        color={getStatusColor(node.status || 'active')} \n                        size=\"small\" \n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box sx={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                        <Box sx={{ width: '100%', mr: 1 }}>\n                          <LinearProgress \n                            variant=\"determinate\" \n                            value={calculateStoragePercentage(node.storageUsed, node.storageMax)} \n                            color={\n                              calculateStoragePercentage(node.storageUsed, node.storageMax) > 90 \n                                ? 'error' \n                                : calculateStoragePercentage(node.storageUsed, node.storageMax) > 70 \n                                  ? 'warning' \n                                  : 'primary'\n                            }\n                          />\n                        </Box>\n                        <Box sx={{ minWidth: 35, mt: 1 }}>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {formatStorage(node.storageUsed)} / {formatStorage(node.storageMax)}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {new Date(node.lastSeen).toLocaleString()}\n                    </TableCell>\n                    <TableCell>\n                      <Tooltip title=\"Edit Node\">\n                        <IconButton \n                          color=\"primary\" \n                          onClick={() => handleEditNodeOpen(node)}\n                          size=\"small\"\n                          sx={{ mr: 1 }}\n                        >\n                          <EditIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      <Tooltip title=\"Delete Node\">\n                        <IconButton \n                          color=\"error\" \n                          onClick={() => handleDeleteConfirmOpen(node)}\n                          size=\"small\"\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Paper>\n\n      {/* Register Node Dialog */}\n      <Dialog open={registerNodeOpen} onClose={handleRegisterNodeClose}>\n        <DialogTitle>Register New Node</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the details for the new node:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"address\"\n            label=\"Node Address\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            value={newNode.address}\n            onChange={(e) => setNewNode({ ...newNode, address: e.target.value })}\n            sx={{ mb: 2 }}\n            placeholder=\"http://nodeaddress:port\"\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"storageMax\"\n            label=\"Max Storage (bytes)\"\n            type=\"number\"\n            fullWidth\n            variant=\"outlined\"\n            value={newNode.storageMax}\n            onChange={(e) => setNewNode({ ...newNode, storageMax: e.target.value })}\n            inputProps={{ min: 1 }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRegisterNodeClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button \n            onClick={handleRegisterNode} \n            color=\"primary\"\n            disabled={!newNode.address || !newNode.storageMax}\n          >\n            Register\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Edit Node Dialog */}\n      <Dialog open={editNodeOpen} onClose={handleEditNodeClose}>\n        <DialogTitle>Edit Node</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Update node status:\n          </DialogContentText>\n          <TextField\n            select\n            margin=\"dense\"\n            id=\"status\"\n            label=\"Status\"\n            fullWidth\n            variant=\"outlined\"\n            value={editingNode?.status || 'active'}\n            onChange={(e) => setEditingNode({ ...editingNode, status: e.target.value })}\n            sx={{ mb: 2 }}\n          >\n            <MenuItem value=\"active\">Active</MenuItem>\n            <MenuItem value=\"inactive\">Inactive</MenuItem>\n            <MenuItem value=\"failed\">Failed</MenuItem>\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleEditNodeClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleEditNode} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={deleteConfirmOpen} onClose={handleDeleteConfirmClose}>\n        <DialogTitle>Confirm Deletion</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this node? This action cannot be undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteNode} color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Notification Snackbar */}\n      <Snackbar\n        open={notification.open}\n        autoHideDuration={6000}\n        onClose={handleNotificationClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert \n          onClose={handleNotificationClose} \n          severity={notification.severity} \n          sx={{ width: '100%' }}\n        >\n          {notification.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,cAAc,MAAM,8BAA8B;;AAEzD;AACA,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsC,OAAO,EAAEC,UAAU,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwC,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC;IAAE8C,OAAO,EAAE,EAAE;IAAEC,UAAU,EAAE,IAAI,GAAG,IAAI,GAAG;EAAK,CAAC,CAAC,CAAC,CAAC;EACzF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsD,YAAY,EAAEC,eAAe,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwD,YAAY,EAAEC,eAAe,CAAC,GAAGzD,QAAQ,CAAC;IAAE0D,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAO,CAAC,CAAC;;EAEhG;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BtB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMqB,QAAQ,GAAG,MAAM5D,KAAK,CAAC6D,GAAG,CAAC,GAAG9B,OAAO,QAAQ,CAAC;MACpDI,QAAQ,CAACyB,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ1B,QAAQ,CAAC,yBAAyB,IAAI,EAAAyB,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoB3B,KAAK,KAAIyB,GAAG,CAACN,OAAO,CAAC,CAAC;MAChFF,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,uBAAuB;QAChCC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,SAAS;MACRrB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAtC,SAAS,CAAC,MAAM;IACd4D,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAMO,UAAU,GAAGC,WAAW,CAACR,UAAU,EAAE,KAAK,CAAC;;IAEjD;IACA,OAAO,MAAMS,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;IACnC5B,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM6B,uBAAuB,GAAGA,CAAA,KAAM;IACpC7B,mBAAmB,CAAC,KAAK,CAAC;IAC1BE,UAAU,CAAC;MAAEC,OAAO,EAAE,EAAE;MAAEC,UAAU,EAAE,IAAI,GAAG,IAAI,GAAG;IAAK,CAAC,CAAC;EAC7D,CAAC;EAED,MAAM0B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAC7B,OAAO,CAACE,OAAO,IAAI,CAACF,OAAO,CAACG,UAAU,EAAE;IAE7C,IAAI;MACF,MAAM7C,KAAK,CAACwE,IAAI,CAAC,GAAGzC,OAAO,QAAQ,EAAE;QACnCa,OAAO,EAAEF,OAAO,CAACE,OAAO;QACxBC,UAAU,EAAE4B,QAAQ,CAAC/B,OAAO,CAACG,UAAU;MACzC,CAAC,CAAC;MACFU,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,8BAA8B;QACvCC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFC,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAAW,cAAA,EAAAC,mBAAA;MACZpC,QAAQ,CAAC,2BAA2B,IAAI,EAAAmC,cAAA,GAAAX,GAAG,CAACH,QAAQ,cAAAc,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcZ,IAAI,cAAAa,mBAAA,uBAAlBA,mBAAA,CAAoBrC,KAAK,KAAIyB,GAAG,CAACN,OAAO,CAAC,CAAC;MAClFF,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,yBAAyB;QAClCC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IAEAY,uBAAuB,CAAC,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMM,kBAAkB,GAAIC,IAAI,IAAK;IACnC5B,cAAc,CAAC;MACb,GAAG4B,IAAI;MACPC,MAAM,EAAED,IAAI,CAACC,MAAM,IAAI;IACzB,CAAC,CAAC;IACF/B,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMgC,mBAAmB,GAAGA,CAAA,KAAM;IAChChC,eAAe,CAAC,KAAK,CAAC;IACtBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM+B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAAChC,WAAW,EAAE;IAElB,IAAI;MACF,MAAMhD,KAAK,CAACiF,GAAG,CAAC,GAAGlD,OAAO,UAAUiB,WAAW,CAACkC,EAAE,SAAS,EAAE;QAC3DJ,MAAM,EAAE9B,WAAW,CAAC8B;MACtB,CAAC,CAAC;MACFvB,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,2BAA2B;QACpCC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFC,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAAoB,cAAA,EAAAC,mBAAA;MACZ7C,QAAQ,CAAC,yBAAyB,IAAI,EAAA4C,cAAA,GAAApB,GAAG,CAACH,QAAQ,cAAAuB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcrB,IAAI,cAAAsB,mBAAA,uBAAlBA,mBAAA,CAAoB9C,KAAK,KAAIyB,GAAG,CAACN,OAAO,CAAC,CAAC;MAChFF,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,uBAAuB;QAChCC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IAEAqB,mBAAmB,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,MAAMM,uBAAuB,GAAIR,IAAI,IAAK;IACxCxB,eAAe,CAACwB,IAAI,CAAC;IACrB1B,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMmC,wBAAwB,GAAGA,CAAA,KAAM;IACrCnC,oBAAoB,CAAC,KAAK,CAAC;IAC3BE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMkC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACnC,YAAY,EAAE;IAEnB,IAAI;MACF,MAAMpD,KAAK,CAACwF,MAAM,CAAC,GAAGzD,OAAO,UAAUqB,YAAY,CAAC8B,EAAE,EAAE,CAAC;MACzD3B,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,2BAA2B;QACpCC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFC,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAA0B,cAAA,EAAAC,mBAAA;MACZnD,QAAQ,CAAC,yBAAyB,IAAI,EAAAkD,cAAA,GAAA1B,GAAG,CAACH,QAAQ,cAAA6B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc3B,IAAI,cAAA4B,mBAAA,uBAAlBA,mBAAA,CAAoBpD,KAAK,KAAIyB,GAAG,CAACN,OAAO,CAAC,CAAC;MAChFF,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,uBAAuB;QAChCC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IAEA4B,wBAAwB,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;IACpCpC,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAEE,IAAI,EAAE;IAAM,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAMoC,cAAc,GAAId,MAAM,IAAK;IACjC,QAAQA,MAAM;MACZ,KAAK,QAAQ;QACX,OAAO,SAAS;MAClB,KAAK,UAAU;QACb,OAAO,SAAS;MAClB,KAAK,QAAQ;QACX,OAAO,OAAO;MAChB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;;EAED;EACA,MAAMe,aAAa,GAAIC,KAAK,IAAK;IAC/B,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;IAEjC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/C,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;IAEnD,OAAOM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;EACzE,CAAC;;EAED;EACA,MAAMO,0BAA0B,GAAGA,CAACC,IAAI,EAAEC,GAAG,KAAK;IAChD,OAAOR,IAAI,CAACS,KAAK,CAAEF,IAAI,GAAGC,GAAG,GAAI,GAAG,CAAC;EACvC,CAAC;EAED,oBACE5E,OAAA,CAAC7B,GAAG;IAAA2G,QAAA,gBACF9E,OAAA,CAAC5B,KAAK;MAAC2G,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACzB9E,OAAA,CAAC7B,GAAG;QAAC4G,EAAE,EAAE;UAAEG,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,eAAe;UAAEC,UAAU,EAAE,QAAQ;UAAEH,EAAE,EAAE;QAAE,CAAE;QAAAH,QAAA,gBACzF9E,OAAA,CAACrB,UAAU;UAAC0G,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,KAAK;UAAAR,QAAA,EAAC;QAEzC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb1F,OAAA,CAAC7B,GAAG;UAAA2G,QAAA,gBACF9E,OAAA,CAACpB,MAAM;YACLyG,OAAO,EAAC,WAAW;YACnBM,KAAK,EAAC,SAAS;YACfC,SAAS,eAAE5F,OAAA,CAACL,OAAO;cAAA4F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACvBG,OAAO,EAAEtD,sBAAuB;YAChCwC,EAAE,EAAE;cAAEe,EAAE,EAAE;YAAE,CAAE;YAAAhB,QAAA,EACf;UAED;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT1F,OAAA,CAACnB,UAAU;YACT8G,KAAK,EAAC,SAAS;YACfE,OAAO,EAAEhE,UAAW;YACpBkE,QAAQ,EAAEzF,OAAQ;YAAAwE,QAAA,eAElB9E,OAAA,CAACH,WAAW;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELpF,OAAO,gBACNN,OAAA,CAAC7B,GAAG;QAAC4G,EAAE,EAAE;UAAEG,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEH,CAAC,EAAE;QAAE,CAAE;QAAAF,QAAA,eAC3D9E,OAAA,CAACX,gBAAgB;UAAAkG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,GACJlF,KAAK,gBACPR,OAAA,CAACV,KAAK;QAACsC,QAAQ,EAAC,OAAO;QAAAkD,QAAA,EAAEtE;MAAK;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACrCtF,KAAK,CAAC4F,MAAM,KAAK,CAAC,gBACpBhG,OAAA,CAAC7B,GAAG;QAAC4G,EAAE,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEiB,SAAS,EAAE;QAAS,CAAE;QAAAnB,QAAA,eACrC9E,OAAA,CAACrB,UAAU;UAAC0G,OAAO,EAAC,OAAO;UAACM,KAAK,EAAC,gBAAgB;UAAAb,QAAA,EAAC;QAEnD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,gBAEN1F,OAAA,CAACxB,cAAc;QAAAsG,QAAA,eACb9E,OAAA,CAAC3B,KAAK;UAAC0G,EAAE,EAAE;YAAEmB,QAAQ,EAAE;UAAI,CAAE;UAAC,cAAW,aAAa;UAAApB,QAAA,gBACpD9E,OAAA,CAACvB,SAAS;YAAAqG,QAAA,eACR9E,OAAA,CAACtB,QAAQ;cAAAoG,QAAA,gBACP9E,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EAAC;cAAE;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eACzB1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EAAC;cAAO;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC9B1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EAAC;cAAM;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC7B1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EAAC;cAAO;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC9B1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EAAC;cAAS;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAChC1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EAAC;cAAO;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZ1F,OAAA,CAAC1B,SAAS;YAAAwG,QAAA,EACP1E,KAAK,CAAC+F,GAAG,CAAEpD,IAAI,iBACd/C,OAAA,CAACtB,QAAQ;cAAAoG,QAAA,gBACP9E,OAAA,CAACzB,SAAS;gBAAC+G,SAAS,EAAC,IAAI;gBAACc,KAAK,EAAC,KAAK;gBAAAtB,QAAA,GAClC/B,IAAI,CAACK,EAAE,CAACiD,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,KAC3B;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eACZ1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EAAE/B,IAAI,CAACjC;cAAO;gBAAAyE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACrC1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,eACR9E,OAAA,CAACP,IAAI;kBACH6G,KAAK,EAAEvD,IAAI,CAACC,MAAM,IAAI,QAAS;kBAC/B2C,KAAK,EAAE7B,cAAc,CAACf,IAAI,CAACC,MAAM,IAAI,QAAQ,CAAE;kBAC/CuD,IAAI,EAAC;gBAAO;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACO,CAAC,eACZ1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,eACR9E,OAAA,CAAC7B,GAAG;kBAAC4G,EAAE,EAAE;oBAAEG,OAAO,EAAE,MAAM;oBAAEE,UAAU,EAAE,QAAQ;oBAAEoB,aAAa,EAAE;kBAAS,CAAE;kBAAA1B,QAAA,gBAC1E9E,OAAA,CAAC7B,GAAG;oBAAC4G,EAAE,EAAE;sBAAE0B,KAAK,EAAE,MAAM;sBAAEX,EAAE,EAAE;oBAAE,CAAE;oBAAAhB,QAAA,eAChC9E,OAAA,CAACN,cAAc;sBACb2F,OAAO,EAAC,aAAa;sBACrBqB,KAAK,EAAEhC,0BAA0B,CAAC3B,IAAI,CAAC4D,WAAW,EAAE5D,IAAI,CAAChC,UAAU,CAAE;sBACrE4E,KAAK,EACHjB,0BAA0B,CAAC3B,IAAI,CAAC4D,WAAW,EAAE5D,IAAI,CAAChC,UAAU,CAAC,GAAG,EAAE,GAC9D,OAAO,GACP2D,0BAA0B,CAAC3B,IAAI,CAAC4D,WAAW,EAAE5D,IAAI,CAAChC,UAAU,CAAC,GAAG,EAAE,GAChE,SAAS,GACT;oBACP;sBAAAwE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACF;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC,eACN1F,OAAA,CAAC7B,GAAG;oBAAC4G,EAAE,EAAE;sBAAEmB,QAAQ,EAAE,EAAE;sBAAEU,EAAE,EAAE;oBAAE,CAAE;oBAAA9B,QAAA,eAC/B9E,OAAA,CAACrB,UAAU;sBAAC0G,OAAO,EAAC,OAAO;sBAACM,KAAK,EAAC,gBAAgB;sBAAAb,QAAA,GAC/Cf,aAAa,CAAChB,IAAI,CAAC4D,WAAW,CAAC,EAAC,KAAG,EAAC5C,aAAa,CAAChB,IAAI,CAAChC,UAAU,CAAC;oBAAA;sBAAAwE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACzD;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC,eACZ1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,EACP,IAAI+B,IAAI,CAAC9D,IAAI,CAAC+D,QAAQ,CAAC,CAACC,cAAc,CAAC;cAAC;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC,eACZ1F,OAAA,CAACzB,SAAS;gBAAAuG,QAAA,gBACR9E,OAAA,CAACR,OAAO;kBAACwH,KAAK,EAAC,WAAW;kBAAAlC,QAAA,eACxB9E,OAAA,CAACnB,UAAU;oBACT8G,KAAK,EAAC,SAAS;oBACfE,OAAO,EAAEA,CAAA,KAAM/C,kBAAkB,CAACC,IAAI,CAAE;oBACxCwD,IAAI,EAAC,OAAO;oBACZxB,EAAE,EAAE;sBAAEe,EAAE,EAAE;oBAAE,CAAE;oBAAAhB,QAAA,eAEd9E,OAAA,CAACF,QAAQ;sBAACmH,QAAQ,EAAC;oBAAO;sBAAA1B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC,eACV1F,OAAA,CAACR,OAAO;kBAACwH,KAAK,EAAC,aAAa;kBAAAlC,QAAA,eAC1B9E,OAAA,CAACnB,UAAU;oBACT8G,KAAK,EAAC,OAAO;oBACbE,OAAO,EAAEA,CAAA,KAAMtC,uBAAuB,CAACR,IAAI,CAAE;oBAC7CwD,IAAI,EAAC,OAAO;oBAAAzB,QAAA,eAEZ9E,OAAA,CAACJ,UAAU;sBAACqH,QAAQ,EAAC;oBAAO;sBAAA1B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,GAzDC3C,IAAI,CAACK,EAAE;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA0DZ,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CACjB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAGR1F,OAAA,CAAClB,MAAM;MAAC4C,IAAI,EAAEhB,gBAAiB;MAACwG,OAAO,EAAE1E,uBAAwB;MAAAsC,QAAA,gBAC/D9E,OAAA,CAACd,WAAW;QAAA4F,QAAA,EAAC;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC5C1F,OAAA,CAAChB,aAAa;QAAA8F,QAAA,gBACZ9E,OAAA,CAACf,iBAAiB;UAAA6F,QAAA,EAAC;QAEnB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eACpB1F,OAAA,CAACb,SAAS;UACRgI,SAAS;UACTC,MAAM,EAAC,OAAO;UACdhE,EAAE,EAAC,SAAS;UACZkD,KAAK,EAAC,cAAc;UACpBe,IAAI,EAAC,MAAM;UACXC,SAAS;UACTjC,OAAO,EAAC,UAAU;UAClBqB,KAAK,EAAE9F,OAAO,CAACE,OAAQ;UACvByG,QAAQ,EAAGC,CAAC,IAAK3G,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEE,OAAO,EAAE0G,CAAC,CAACC,MAAM,CAACf;UAAM,CAAC,CAAE;UACrE3B,EAAE,EAAE;YAAEE,EAAE,EAAE;UAAE,CAAE;UACdyC,WAAW,EAAC;QAAyB;UAAAnC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACF1F,OAAA,CAACb,SAAS;UACRiI,MAAM,EAAC,OAAO;UACdhE,EAAE,EAAC,YAAY;UACfkD,KAAK,EAAC,qBAAqB;UAC3Be,IAAI,EAAC,QAAQ;UACbC,SAAS;UACTjC,OAAO,EAAC,UAAU;UAClBqB,KAAK,EAAE9F,OAAO,CAACG,UAAW;UAC1BwG,QAAQ,EAAGC,CAAC,IAAK3G,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEG,UAAU,EAAEyG,CAAC,CAACC,MAAM,CAACf;UAAM,CAAC,CAAE;UACxEiB,UAAU,EAAE;YAAEC,GAAG,EAAE;UAAE;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,eAChB1F,OAAA,CAACjB,aAAa;QAAA+F,QAAA,gBACZ9E,OAAA,CAACpB,MAAM;UAACiH,OAAO,EAAErD,uBAAwB;UAACmD,KAAK,EAAC,SAAS;UAAAb,QAAA,EAAC;QAE1D;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1F,OAAA,CAACpB,MAAM;UACLiH,OAAO,EAAEpD,kBAAmB;UAC5BkD,KAAK,EAAC,SAAS;UACfI,QAAQ,EAAE,CAACnF,OAAO,CAACE,OAAO,IAAI,CAACF,OAAO,CAACG,UAAW;UAAA+D,QAAA,EACnD;QAED;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGT1F,OAAA,CAAClB,MAAM;MAAC4C,IAAI,EAAEV,YAAa;MAACkG,OAAO,EAAEjE,mBAAoB;MAAA6B,QAAA,gBACvD9E,OAAA,CAACd,WAAW;QAAA4F,QAAA,EAAC;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACpC1F,OAAA,CAAChB,aAAa;QAAA8F,QAAA,gBACZ9E,OAAA,CAACf,iBAAiB;UAAA6F,QAAA,EAAC;QAEnB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eACpB1F,OAAA,CAACb,SAAS;UACR0I,MAAM;UACNT,MAAM,EAAC,OAAO;UACdhE,EAAE,EAAC,QAAQ;UACXkD,KAAK,EAAC,QAAQ;UACdgB,SAAS;UACTjC,OAAO,EAAC,UAAU;UAClBqB,KAAK,EAAE,CAAAxF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE8B,MAAM,KAAI,QAAS;UACvCuE,QAAQ,EAAGC,CAAC,IAAKrG,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAE8B,MAAM,EAAEwE,CAAC,CAACC,MAAM,CAACf;UAAM,CAAC,CAAE;UAC5E3B,EAAE,EAAE;YAAEE,EAAE,EAAE;UAAE,CAAE;UAAAH,QAAA,gBAEd9E,OAAA,CAACZ,QAAQ;YAACsH,KAAK,EAAC,QAAQ;YAAA5B,QAAA,EAAC;UAAM;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAC1C1F,OAAA,CAACZ,QAAQ;YAACsH,KAAK,EAAC,UAAU;YAAA5B,QAAA,EAAC;UAAQ;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAC9C1F,OAAA,CAACZ,QAAQ;YAACsH,KAAK,EAAC,QAAQ;YAAA5B,QAAA,EAAC;UAAM;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAChB1F,OAAA,CAACjB,aAAa;QAAA+F,QAAA,gBACZ9E,OAAA,CAACpB,MAAM;UAACiH,OAAO,EAAE5C,mBAAoB;UAAC0C,KAAK,EAAC,SAAS;UAAAb,QAAA,EAAC;QAEtD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1F,OAAA,CAACpB,MAAM;UAACiH,OAAO,EAAE3C,cAAe;UAACyC,KAAK,EAAC,SAAS;UAAAb,QAAA,EAAC;QAEjD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGT1F,OAAA,CAAClB,MAAM;MAAC4C,IAAI,EAAEN,iBAAkB;MAAC8F,OAAO,EAAE1D,wBAAyB;MAAAsB,QAAA,gBACjE9E,OAAA,CAACd,WAAW;QAAA4F,QAAA,EAAC;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC3C1F,OAAA,CAAChB,aAAa;QAAA8F,QAAA,eACZ9E,OAAA,CAACf,iBAAiB;UAAA6F,QAAA,EAAC;QAEnB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAChB1F,OAAA,CAACjB,aAAa;QAAA+F,QAAA,gBACZ9E,OAAA,CAACpB,MAAM;UAACiH,OAAO,EAAErC,wBAAyB;UAACmC,KAAK,EAAC,SAAS;UAAAb,QAAA,EAAC;QAE3D;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1F,OAAA,CAACpB,MAAM;UAACiH,OAAO,EAAEpC,gBAAiB;UAACkC,KAAK,EAAC,OAAO;UAAAb,QAAA,EAAC;QAEjD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGT1F,OAAA,CAACT,QAAQ;MACPmC,IAAI,EAAEF,YAAY,CAACE,IAAK;MACxBoG,gBAAgB,EAAE,IAAK;MACvBZ,OAAO,EAAErD,uBAAwB;MACjCkE,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAQ,CAAE;MAAAnD,QAAA,eAE1D9E,OAAA,CAACV,KAAK;QACJ4H,OAAO,EAAErD,uBAAwB;QACjCjC,QAAQ,EAAEJ,YAAY,CAACI,QAAS;QAChCmD,EAAE,EAAE;UAAE0B,KAAK,EAAE;QAAO,CAAE;QAAA3B,QAAA,EAErBtD,YAAY,CAACG;MAAO;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACvF,EAAA,CApaWD,WAAW;AAAAgI,EAAA,GAAXhI,WAAW;AAAA,IAAAgI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}