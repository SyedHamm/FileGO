{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamma\\\\Desktop\\\\GO\\\\frontend\\\\src\\\\components\\\\FileExplorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\n\n// Icons\nimport FolderIcon from '@mui/icons-material/Folder';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport HomeIcon from '@mui/icons-material/Home';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/api';\nexport const FileExplorer = () => {\n  _s();\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [createFolderOpen, setCreateFolderOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [uploadOpen, setUploadOpen] = useState(false);\n  const [contextMenu, setContextMenu] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [replicateOpen, setReplicateOpen] = useState(false);\n  const [replicaCount, setReplicaCount] = useState(1);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n\n  // Fetch files from the current path\n  const fetchFiles = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_URL}/files?path=${currentPath}`);\n      setFiles(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to fetch files: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to fetch files',\n        severity: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize by fetching root files\n  useEffect(() => {\n    fetchFiles();\n  }, [currentPath]);\n\n  // Navigate to a directory\n  const navigateToDirectory = path => {\n    setCurrentPath(path);\n  };\n\n  // Handle breadcrumb navigation\n  const handleBreadcrumbClick = path => {\n    navigateToDirectory(path);\n  };\n\n  // Create folder dialog handlers\n  const handleCreateFolderOpen = () => {\n    setCreateFolderOpen(true);\n  };\n  const handleCreateFolderClose = () => {\n    setCreateFolderOpen(false);\n    setNewFolderName('');\n  };\n  const handleCreateFolder = async () => {\n    if (!newFolderName) return;\n    try {\n      await axios.post(`${API_URL}/directories/${currentPath ? currentPath + '/' : ''}${newFolderName}`);\n      setNotification({\n        open: true,\n        message: 'Folder created successfully',\n        severity: 'success'\n      });\n      fetchFiles();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to create folder: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to create folder',\n        severity: 'error'\n      });\n    }\n    handleCreateFolderClose();\n  };\n\n  // Upload dialog handlers\n  const handleUploadOpen = () => {\n    setUploadOpen(true);\n  };\n  const handleUploadClose = () => {\n    setUploadOpen(false);\n  };\n\n  // File dropzone configuration\n  const {\n    getRootProps,\n    getInputProps,\n    acceptedFiles\n  } = useDropzone({\n    accept: {\n      'application/octet-stream': [],\n      'text/plain': ['.txt'],\n      'application/pdf': ['.pdf'],\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif'],\n      'application/msword': ['.doc', '.docx'],\n      'application/vnd.ms-excel': ['.xls', '.xlsx']\n    },\n    multiple: true\n  });\n  const handleFileUpload = async () => {\n    if (acceptedFiles.length === 0) return;\n    try {\n      for (const file of acceptedFiles) {\n        const formData = new FormData();\n        formData.append('file', file);\n        await axios.post(`${API_URL}/files/${currentPath ? currentPath + '/' : ''}${file.name}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      }\n      setNotification({\n        open: true,\n        message: 'Files uploaded successfully',\n        severity: 'success'\n      });\n      fetchFiles();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError('Failed to upload files: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to upload files',\n        severity: 'error'\n      });\n    }\n    handleUploadClose();\n  };\n\n  // Context menu handlers\n  const handleContextMenu = (event, file) => {\n    event.preventDefault();\n    setContextMenu({\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4\n    });\n    setSelectedFile(file);\n  };\n  const handleContextMenuClose = () => {\n    setContextMenu(null);\n    setSelectedFile(null);\n  };\n\n  // Delete file handler\n  const handleDeleteFile = async () => {\n    if (!selectedFile) return;\n    try {\n      await axios.delete(`${API_URL}/files/${selectedFile.path}`);\n      setNotification({\n        open: true,\n        message: 'File deleted successfully',\n        severity: 'success'\n      });\n      fetchFiles();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError('Failed to delete file: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to delete file',\n        severity: 'error'\n      });\n    }\n    handleContextMenuClose();\n  };\n\n  // Download file handler\n  const handleDownloadFile = () => {\n    if (!selectedFile) return;\n    window.open(`${API_URL}/files/${selectedFile.path}?download=true`, '_blank');\n    handleContextMenuClose();\n  };\n\n  // Replicate file dialog handlers\n  const handleReplicateOpen = () => {\n    setReplicateOpen(true);\n  };\n  const handleReplicateClose = () => {\n    setReplicateOpen(false);\n    setReplicaCount(1);\n  };\n  const handleReplicateFile = async () => {\n    if (!selectedFile || replicaCount < 1) return;\n    try {\n      await axios.put(`${API_URL}/replicate/${selectedFile.path}?replicas=${replicaCount}`);\n      setNotification({\n        open: true,\n        message: 'Replication factor set successfully',\n        severity: 'success'\n      });\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError('Failed to set replication factor: ' + (((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || err.message));\n      setNotification({\n        open: true,\n        message: 'Failed to set replication factor',\n        severity: 'error'\n      });\n    }\n    handleReplicateClose();\n    handleContextMenuClose();\n  };\n\n  // Notification close handler\n  const handleNotificationClose = () => {\n    setNotification({\n      ...notification,\n      open: false\n    });\n  };\n\n  // Generate breadcrumbs for navigation\n  const renderBreadcrumbs = () => {\n    const paths = currentPath.split('/').filter(Boolean);\n    const breadcrumbs = [];\n    breadcrumbs.push(/*#__PURE__*/_jsxDEV(Link, {\n      underline: \"hover\",\n      color: \"inherit\",\n      onClick: () => handleBreadcrumbClick(''),\n      className: \"breadcrumb-item\",\n      children: [/*#__PURE__*/_jsxDEV(HomeIcon, {\n        sx: {\n          mr: 0.5\n        },\n        fontSize: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), \"Home\"]\n    }, \"home\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this));\n    let currentPathAccumulator = '';\n    for (let i = 0; i < paths.length; i++) {\n      currentPathAccumulator += (i === 0 ? '' : '/') + paths[i];\n      breadcrumbs.push(/*#__PURE__*/_jsxDEV(Link, {\n        underline: \"hover\",\n        color: \"inherit\",\n        onClick: () => handleBreadcrumbClick(currentPathAccumulator),\n        className: \"breadcrumb-item\",\n        children: paths[i]\n      }, paths[i], false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      separator: \"\\u203A\",\n      \"aria-label\": \"breadcrumb\",\n      children: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: renderBreadcrumbs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-start',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(CreateNewFolderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 24\n          }, this),\n          onClick: handleCreateFolderOpen,\n          sx: {\n            mr: 1\n          },\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          startIcon: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 24\n          }, this),\n          onClick: handleUploadOpen,\n          children: \"Upload Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this) : files.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: \"This folder is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n          className: \"file-list-item\",\n          onClick: file.isDir ? () => navigateToDirectory(file.path) : undefined,\n          onContextMenu: e => handleContextMenu(e, file),\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            onClick: e => {\n              e.stopPropagation();\n              handleContextMenu(e, file);\n            },\n            children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 19\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: file.isDir ? /*#__PURE__*/_jsxDEV(FolderIcon, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(InsertDriveFileIcon, {\n              color: \"action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: file.name,\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                color: \"text.primary\",\n                children: file.isDir ? 'Folder' : `File • ${formatFileSize(file.size)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 23\n              }, this), file.replicas > 1 && ` • ${file.replicas} replicas`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, file.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: createFolderOpen,\n      onClose: handleCreateFolderClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Enter a name for the new folder:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Folder Name\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateFolderClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateFolder,\n          color: \"primary\",\n          disabled: !newFolderName,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: uploadOpen,\n      onClose: handleUploadClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Drag and drop files here or click to select files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          ...getRootProps(),\n          className: \"upload-dropzone\",\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Drag and drop files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), acceptedFiles.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Selected Files:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: acceptedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(InsertDriveFileIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: file.name,\n                secondary: formatFileSize(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUploadClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleFileUpload,\n          color: \"primary\",\n          disabled: acceptedFiles.length === 0,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      open: contextMenu !== null,\n      onClose: handleContextMenuClose,\n      anchorReference: \"anchorPosition\",\n      anchorPosition: contextMenu !== null ? {\n        top: contextMenu.mouseY,\n        left: contextMenu.mouseX\n      } : undefined,\n      children: [selectedFile && !selectedFile.isDir && /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDownloadFile,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(GetAppIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDeleteFile,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), selectedFile && !selectedFile.isDir && /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleReplicateOpen,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(AutorenewIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: \"Set Replication Factor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: replicateOpen,\n      onClose: handleReplicateClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Set Replication Factor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Set the number of replicas for this file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"replicas\",\n          label: \"Number of Replicas\",\n          type: \"number\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: replicaCount,\n          onChange: e => setReplicaCount(Math.max(1, parseInt(e.target.value) || 1)),\n          inputProps: {\n            min: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReplicateClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReplicateFile,\n          color: \"primary\",\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleNotificationClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleNotificationClose,\n        severity: notification.severity,\n        sx: {\n          width: '100%'\n        },\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to format file size\n_s(FileExplorer, \"Uns5b6nzcpQToGJnOlctHKnw/cE=\", false, function () {\n  return [useDropzone];\n});\n_c = FileExplorer;\nconst formatFileSize = bytes => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Paper","List","ListItem","ListItemIcon","ListItemText","Typography","Breadcrumbs","Link","IconButton","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","MenuItem","Menu","Alert","Snackbar","CircularProgress","Divider","Tooltip","FolderIcon","InsertDriveFileIcon","CreateNewFolderIcon","UploadFileIcon","HomeIcon","MoreVertIcon","DeleteIcon","FileCopyIcon","GetAppIcon","AutorenewIcon","useDropzone","jsxDEV","_jsxDEV","API_URL","FileExplorer","_s","currentPath","setCurrentPath","files","setFiles","loading","setLoading","error","setError","createFolderOpen","setCreateFolderOpen","newFolderName","setNewFolderName","uploadOpen","setUploadOpen","contextMenu","setContextMenu","selectedFile","setSelectedFile","replicateOpen","setReplicateOpen","replicaCount","setReplicaCount","notification","setNotification","open","message","severity","fetchFiles","response","get","data","err","_err$response","_err$response$data","navigateToDirectory","path","handleBreadcrumbClick","handleCreateFolderOpen","handleCreateFolderClose","handleCreateFolder","post","_err$response2","_err$response2$data","handleUploadOpen","handleUploadClose","getRootProps","getInputProps","acceptedFiles","accept","multiple","handleFileUpload","length","file","formData","FormData","append","name","headers","_err$response3","_err$response3$data","handleContextMenu","event","preventDefault","mouseX","clientX","mouseY","clientY","handleContextMenuClose","handleDeleteFile","delete","_err$response4","_err$response4$data","handleDownloadFile","window","handleReplicateOpen","handleReplicateClose","handleReplicateFile","put","_err$response5","_err$response5$data","handleNotificationClose","renderBreadcrumbs","paths","split","filter","Boolean","breadcrumbs","push","underline","color","onClick","className","children","sx","mr","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","currentPathAccumulator","i","separator","p","mb","display","alignItems","justifyContent","variant","startIcon","textAlign","map","isDir","undefined","onContextMenu","e","secondaryAction","edge","stopPropagation","primary","secondary","Fragment","component","formatFileSize","size","replicas","onClose","autoFocus","margin","id","label","type","fullWidth","value","onChange","target","disabled","maxWidth","mt","dense","index","anchorReference","anchorPosition","top","left","Math","max","parseInt","inputProps","min","autoHideDuration","anchorOrigin","vertical","horizontal","width","_c","bytes","k","sizes","floor","log","parseFloat","pow","toFixed","$RefreshReg$"],"sources":["C:/Users/hamma/Desktop/GO/frontend/src/components/FileExplorer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\n\n// Icons\nimport FolderIcon from '@mui/icons-material/Folder';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport HomeIcon from '@mui/icons-material/Home';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\n\nimport { useDropzone } from 'react-dropzone';\n\nconst API_URL = 'http://localhost:8080/api';\n\nexport const FileExplorer = () => {\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [createFolderOpen, setCreateFolderOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [uploadOpen, setUploadOpen] = useState(false);\n  const [contextMenu, setContextMenu] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [replicateOpen, setReplicateOpen] = useState(false);\n  const [replicaCount, setReplicaCount] = useState(1);\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\n\n  // Fetch files from the current path\n  const fetchFiles = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_URL}/files?path=${currentPath}`);\n      setFiles(response.data);\n    } catch (err) {\n      setError('Failed to fetch files: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to fetch files', \n        severity: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize by fetching root files\n  useEffect(() => {\n    fetchFiles();\n  }, [currentPath]);\n\n  // Navigate to a directory\n  const navigateToDirectory = (path) => {\n    setCurrentPath(path);\n  };\n\n  // Handle breadcrumb navigation\n  const handleBreadcrumbClick = (path) => {\n    navigateToDirectory(path);\n  };\n\n  // Create folder dialog handlers\n  const handleCreateFolderOpen = () => {\n    setCreateFolderOpen(true);\n  };\n\n  const handleCreateFolderClose = () => {\n    setCreateFolderOpen(false);\n    setNewFolderName('');\n  };\n\n  const handleCreateFolder = async () => {\n    if (!newFolderName) return;\n    \n    try {\n      await axios.post(`${API_URL}/directories/${currentPath ? currentPath + '/' : ''}${newFolderName}`);\n      setNotification({ \n        open: true, \n        message: 'Folder created successfully', \n        severity: 'success' \n      });\n      fetchFiles();\n    } catch (err) {\n      setError('Failed to create folder: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to create folder', \n        severity: 'error' \n      });\n    }\n    \n    handleCreateFolderClose();\n  };\n\n  // Upload dialog handlers\n  const handleUploadOpen = () => {\n    setUploadOpen(true);\n  };\n\n  const handleUploadClose = () => {\n    setUploadOpen(false);\n  };\n\n  // File dropzone configuration\n  const { getRootProps, getInputProps, acceptedFiles } = useDropzone({\n    accept: {\n      'application/octet-stream': [],\n      'text/plain': ['.txt'],\n      'application/pdf': ['.pdf'],\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif'],\n      'application/msword': ['.doc', '.docx'],\n      'application/vnd.ms-excel': ['.xls', '.xlsx'],\n    },\n    multiple: true\n  });\n\n  const handleFileUpload = async () => {\n    if (acceptedFiles.length === 0) return;\n    \n    try {\n      for (const file of acceptedFiles) {\n        const formData = new FormData();\n        formData.append('file', file);\n        \n        await axios.post(\n          `${API_URL}/files/${currentPath ? currentPath + '/' : ''}${file.name}`, \n          formData, \n          {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        );\n      }\n      \n      setNotification({ \n        open: true, \n        message: 'Files uploaded successfully', \n        severity: 'success' \n      });\n      fetchFiles();\n    } catch (err) {\n      setError('Failed to upload files: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to upload files', \n        severity: 'error' \n      });\n    }\n    \n    handleUploadClose();\n  };\n\n  // Context menu handlers\n  const handleContextMenu = (event, file) => {\n    event.preventDefault();\n    setContextMenu({ mouseX: event.clientX - 2, mouseY: event.clientY - 4 });\n    setSelectedFile(file);\n  };\n\n  const handleContextMenuClose = () => {\n    setContextMenu(null);\n    setSelectedFile(null);\n  };\n\n  // Delete file handler\n  const handleDeleteFile = async () => {\n    if (!selectedFile) return;\n    \n    try {\n      await axios.delete(`${API_URL}/files/${selectedFile.path}`);\n      setNotification({ \n        open: true, \n        message: 'File deleted successfully', \n        severity: 'success' \n      });\n      fetchFiles();\n    } catch (err) {\n      setError('Failed to delete file: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to delete file', \n        severity: 'error' \n      });\n    }\n    \n    handleContextMenuClose();\n  };\n\n  // Download file handler\n  const handleDownloadFile = () => {\n    if (!selectedFile) return;\n    \n    window.open(`${API_URL}/files/${selectedFile.path}?download=true`, '_blank');\n    handleContextMenuClose();\n  };\n\n  // Replicate file dialog handlers\n  const handleReplicateOpen = () => {\n    setReplicateOpen(true);\n  };\n\n  const handleReplicateClose = () => {\n    setReplicateOpen(false);\n    setReplicaCount(1);\n  };\n\n  const handleReplicateFile = async () => {\n    if (!selectedFile || replicaCount < 1) return;\n    \n    try {\n      await axios.put(`${API_URL}/replicate/${selectedFile.path}?replicas=${replicaCount}`);\n      setNotification({ \n        open: true, \n        message: 'Replication factor set successfully', \n        severity: 'success' \n      });\n    } catch (err) {\n      setError('Failed to set replication factor: ' + (err.response?.data?.error || err.message));\n      setNotification({ \n        open: true, \n        message: 'Failed to set replication factor', \n        severity: 'error' \n      });\n    }\n    \n    handleReplicateClose();\n    handleContextMenuClose();\n  };\n\n  // Notification close handler\n  const handleNotificationClose = () => {\n    setNotification({ ...notification, open: false });\n  };\n\n  // Generate breadcrumbs for navigation\n  const renderBreadcrumbs = () => {\n    const paths = currentPath.split('/').filter(Boolean);\n    const breadcrumbs = [];\n    \n    breadcrumbs.push(\n      <Link\n        key=\"home\"\n        underline=\"hover\"\n        color=\"inherit\"\n        onClick={() => handleBreadcrumbClick('')}\n        className=\"breadcrumb-item\"\n      >\n        <HomeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n        Home\n      </Link>\n    );\n    \n    let currentPathAccumulator = '';\n    \n    for (let i = 0; i < paths.length; i++) {\n      currentPathAccumulator += (i === 0 ? '' : '/') + paths[i];\n      \n      breadcrumbs.push(\n        <Link\n          key={paths[i]}\n          underline=\"hover\"\n          color=\"inherit\"\n          onClick={() => handleBreadcrumbClick(currentPathAccumulator)}\n          className=\"breadcrumb-item\"\n        >\n          {paths[i]}\n        </Link>\n      );\n    }\n    \n    return (\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n        {breadcrumbs}\n      </Breadcrumbs>\n    );\n  };\n\n  return (\n    <Box>\n      <Paper sx={{ p: 2, mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          {renderBreadcrumbs()}\n        </Box>\n        \n        <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            startIcon={<CreateNewFolderIcon />}\n            onClick={handleCreateFolderOpen}\n            sx={{ mr: 1 }}\n          >\n            New Folder\n          </Button>\n          <Button \n            variant=\"contained\" \n            color=\"secondary\" \n            startIcon={<UploadFileIcon />}\n            onClick={handleUploadOpen}\n          >\n            Upload Files\n          </Button>\n        </Box>\n        \n        <Divider sx={{ mb: 2 }} />\n        \n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : files.length === 0 ? (\n          <Box sx={{ p: 4, textAlign: 'center' }}>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              This folder is empty\n            </Typography>\n          </Box>\n        ) : (\n          <List>\n            {files.map((file) => (\n              <ListItem\n                key={file.path}\n                className=\"file-list-item\"\n                onClick={file.isDir ? () => navigateToDirectory(file.path) : undefined}\n                onContextMenu={(e) => handleContextMenu(e, file)}\n                secondaryAction={\n                  <IconButton edge=\"end\" onClick={(e) => {\n                    e.stopPropagation();\n                    handleContextMenu(e, file);\n                  }}>\n                    <MoreVertIcon />\n                  </IconButton>\n                }\n              >\n                <ListItemIcon>\n                  {file.isDir ? <FolderIcon color=\"primary\" /> : <InsertDriveFileIcon color=\"action\" />}\n                </ListItemIcon>\n                <ListItemText\n                  primary={file.name}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"text.primary\"\n                      >\n                        {file.isDir ? 'Folder' : `File • ${formatFileSize(file.size)}`}\n                      </Typography>\n                      {file.replicas > 1 && ` • ${file.replicas} replicas`}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </Paper>\n\n      {/* Create Folder Dialog */}\n      <Dialog open={createFolderOpen} onClose={handleCreateFolderClose}>\n        <DialogTitle>Create New Folder</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter a name for the new folder:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Folder Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            value={newFolderName}\n            onChange={(e) => setNewFolderName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCreateFolderClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreateFolder} color=\"primary\" disabled={!newFolderName}>\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Upload Files Dialog */}\n      <Dialog open={uploadOpen} onClose={handleUploadClose} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Upload Files</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Drag and drop files here or click to select files:\n          </DialogContentText>\n          <Box \n            {...getRootProps()} \n            className=\"upload-dropzone\"\n            sx={{ mt: 2 }}\n          >\n            <input {...getInputProps()} />\n            <Typography>Drag and drop files here, or click to select files</Typography>\n          </Box>\n          {acceptedFiles.length > 0 && (\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"subtitle1\">Selected Files:</Typography>\n              <List dense>\n                {acceptedFiles.map((file, index) => (\n                  <ListItem key={index}>\n                    <ListItemIcon>\n                      <InsertDriveFileIcon />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary={file.name} \n                      secondary={formatFileSize(file.size)} \n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleUploadClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button \n            onClick={handleFileUpload} \n            color=\"primary\"\n            disabled={acceptedFiles.length === 0}\n          >\n            Upload\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Context Menu */}\n      <Menu\n        open={contextMenu !== null}\n        onClose={handleContextMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          contextMenu !== null\n            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n            : undefined\n        }\n      >\n        {selectedFile && !selectedFile.isDir && (\n          <MenuItem onClick={handleDownloadFile}>\n            <ListItemIcon>\n              <GetAppIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText>Download</ListItemText>\n          </MenuItem>\n        )}\n        <MenuItem onClick={handleDeleteFile}>\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n        {selectedFile && !selectedFile.isDir && (\n          <MenuItem onClick={handleReplicateOpen}>\n            <ListItemIcon>\n              <AutorenewIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText>Set Replication Factor</ListItemText>\n          </MenuItem>\n        )}\n      </Menu>\n\n      {/* Replication Dialog */}\n      <Dialog open={replicateOpen} onClose={handleReplicateClose}>\n        <DialogTitle>Set Replication Factor</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Set the number of replicas for this file:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"replicas\"\n            label=\"Number of Replicas\"\n            type=\"number\"\n            fullWidth\n            variant=\"outlined\"\n            value={replicaCount}\n            onChange={(e) => setReplicaCount(Math.max(1, parseInt(e.target.value) || 1))}\n            inputProps={{ min: 1 }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleReplicateClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleReplicateFile} color=\"primary\">\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Notification Snackbar */}\n      <Snackbar\n        open={notification.open}\n        autoHideDuration={6000}\n        onClose={handleNotificationClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert \n          onClose={handleNotificationClose} \n          severity={notification.severity} \n          sx={{ width: '100%' }}\n        >\n          {notification.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\n// Helper function to format file size\nconst formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}